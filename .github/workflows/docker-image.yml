name: Docker Image CI

on:
  push:
    branches:
      - master
      - dev
      - feature/*
    tags:
      - "v*"
    schedule:
      - cron: "05 04 * * 1"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_HUB_ID }}/drawio
      BASE_IMAGE: debian
      HTTP_PORT: 32733
      HTTPS_PORT: 32734
    steps:
      - uses: actions/checkout@v2
      - name: Login to docker hu
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_ID }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build the ${BASE_IMAGE} Docker image
        run: |
          # Get draw.io current latest version
          git submodule update --init
          echo "VERSION=$(git --git-dir drawio/.git describe --abbrev=0 | sed s/v//)" >> $GITHUB_ENV
          echo "FULL_IMAGE_NAME=${IMAGE_NAME}:${VERSION}-${BASE_IMAGE}" >> $GITHUB_ENV
          docker build -f ${BASE_IMAGE}/Dockerfile -t $FULL_IMAGE_NAME ${BASE_IMAGE}/

      - name: Test the image works
        run: |
          docker run --name "drawio-${BASE_IMAGE}" -d -p ${HTTP_PORT}:8080 -p ${HTTPS_PORT}:8443 $FULL_IMAGE_NAME
          sleep 10
          docker exec drawio-${BASE_IMAGE} /bin/bash -c "curl -i /dev/null http://localhost:8080"

      - name: Publish the container
        run: |
          export GIT_BRANCH=`echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }'`
          export TAG=`if [ "$GIT_BRANCH" == "v${VERSION}" ] || [ "$GIT_BRANCH" == "master" ]; then echo "latest"; else echo $GIT_BRANCH ; fi`
          docker tag $FULL_IMAGE_NAME ${IMAGE_NAME}:$TAG;
          docker push ${IMAGE_NAME}:${TAG};
          docker push $FULL_IMAGE_NAME;
